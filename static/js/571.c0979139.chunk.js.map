{"version":3,"file":"static/js/571.c0979139.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/UpdateForm/UpdateForm.styled.jsx","components/UpdateForm/UpdateForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/PageStyled/ContactsPage.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #edc3ca;\n  border: 1px solid #48494a;\n`;\n\nexport const Title = styled.h3`\n  margin: 10px 0;\n  text-align: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 20px;\n  color: #70135f;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 20px;\n  margin-top: 4px;\n  display: block;\n  padding: 4px;\n  border: 1px solid #48494a;\n  font-size: 16px;\n`;\n\nexport const ErrorValue = styled.div`\n  margin-top: 4px;\n  font-size: 12px;\n  font-weight: 400;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 8px;\n  border: 1px solid #120d14;\n  border-radius: 8px;\n  background-color: #120d14;\n  font-size: 16px;\n  color: #edc3ca;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.contacts.filter;\nexport const selectContactsActive = state => state.contacts.activeUpdate;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { addContactThunk } from 'redux/contacts/contactsThunk';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport {\n  FormContainer,\n  Title,\n  Label,\n  Input,\n  ErrorValue,\n  Button,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .min(7)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const isExist = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContactThunk({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormContainer autoComplete=\"off\">\n      <Title>New contact</Title>\n        <Label htmlFor=\"\">\n          Name\n          <Input type=\"text\" name=\"name\" placeholder=\"Rosie Simpson\" />\n          <ErrorMessage name=\"name\" component={ErrorValue} />\n        </Label>\n        <Label htmlFor=\"\">\n          Number\n          <Input type=\"tel\" name=\"number\" placeholder=\"000-000-0000\" />\n          <ErrorMessage name=\"number\" component={ErrorValue} />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContainer>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ItemLi = styled.li`\n  padding: 8px;\n  display: flex;\n  &:nth-of-type(2n) {\n    background-color: #edc3ca;\n  }\n  font-weight: 600;\n  font-size: 16px;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ItemSpan = styled.span`\n  width: 200px;\n  margin-right: 40px;\n  margin-left: auto;\n  @media screen and (min-width: 768px) {\n    margin-right: 180px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-right: 20px;\n  padding: 4px;\n  border: 1px solid #120d14;\n  border-radius: 8px;\n  background-color: #120d14;\n  font-size: 12px;\n  color: #edc3ca;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Modal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.4);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FormContainer = styled(Form)`\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #edc3ca;\n  border: 1px solid #48494a;\n`;\n\nexport const Title = styled.h3`\n  margin: 10px 0;\n  text-align: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 20px;\n  color: #70135f;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 20px;\n  margin-top: 4px;\n  display: block;\n  padding: 4px;\n  border: 1px solid #48494a;\n  font-size: 16px;\n`;\n\nexport const ErrorValue = styled.div`\n  margin-top: 4px;\n  font-size: 12px;\n  font-weight: 400;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 8px;\n  border: 1px solid #120d14;\n  border-radius: 8px;\n  background-color: #120d14;\n  font-size: 16px;\n  color: #edc3ca;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { updateContactThunk } from 'redux/contacts/contactsThunk';\nimport { setActiveUpdate } from 'redux/contacts/contactsSlice';\nimport {\n  Modal,\n  FormContainer,\n  Title,\n  Label,\n  Input,\n  ErrorValue,\n  Button,\n} from './UpdateForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .min(7)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport const UpdateForm = ({ contact }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const isExist = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(updateContactThunk({ id, name, number }));\n    resetForm();\n  };\n\n  return (\n    <Modal onClick={() => dispatch(setActiveUpdate(false))}>\n      <Formik\n        initialValues={{ name, number }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer autoComplete=\"off\" onClick={e => e.stopPropagation()}>\n          <Title>Edit contact data</Title>\n          <Label htmlFor=\"\">\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"Rosie Simpson\" />\n            <ErrorMessage name=\"name\" component={ErrorValue} />\n          </Label>\n          <Label htmlFor=\"\">\n            Number\n            <Input type=\"tel\" name=\"number\" placeholder=\"000-000-0000\" />\n            <ErrorMessage name=\"number\" component={ErrorValue} />\n          </Label>\n          <Button type=\"submit\">Edit contact</Button>\n        </FormContainer>\n      </Formik>\n    </Modal>\n  );\n};\n\nUpdateForm.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContactThunk } from 'redux/contacts/contactsThunk';\nimport { ItemLi, ItemSpan, Button } from './ContactListItem.styled';\nimport { setActiveUpdate } from 'redux/contacts/contactsSlice';\nimport { selectContactsActive } from 'redux/contacts/contactsSelectors';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const active = useSelector(selectContactsActive);\n\n  return (\n    <ItemLi>\n      {' '}\n      {name}\n      <ItemSpan>&#9990; {number}</ItemSpan>\n      <Button type=\"button\" aria-label='Edit contact' onClick={() => dispatch(setActiveUpdate(true))}>\n        Edit\n      </Button>\n      <Button type=\"button\" aria-label='Delete contact' onClick={() => dispatch(deleteContactThunk(id))}>\n        Delete\n      </Button>\n\n      {active && <UpdateForm contact = {{id, name, number}} />}\n    </ItemLi>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  border: 1px solid #48494a;\n`;\n\nexport const Text = styled.p`\n  margin: 20px 0;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n`;\n\nexport const Error = styled.div`\n  margin: 20px 0;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsError,\n  selectFilteredContacts,\n  selectContactsIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContactsThunk } from 'redux/contacts/contactsThunk';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error, List, Text } from './ContactList.styled';\nimport { selectUserAuthentication } from 'redux/auth/authSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectFilteredContacts);\n  const loading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const authenticated = useSelector(selectUserAuthentication);\n\n  useEffect(() => {\n    if (!authenticated) return;\n    dispatch(fetchContactsThunk());\n  }, [authenticated, dispatch]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!loading && !error && !visibleContacts?.length && <Text>No found!</Text>}\n      <List>\n        {visibleContacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </List>\n      {error && <Error>Sorry, something went wrong...</Error>}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: inline-block;\n  margin-bottom: 10px;\n  text-align: left;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 18px;\n  margin-left: 40px;\n  padding: 4px;\n  border: 1px solid #48494a;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectContactsFilter } from 'redux/contacts/contactsSelectors';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  function onFilterContact(e) {\n    dispatch(setFilter(e.target.value.trim()));\n  }\n\n  return (\n    <Label htmlFor=\"\">\n      Find contact by name\n      <Input\n        type=\"text\"\n        value={filter}\n        placeholder=\"Search...\"\n        onChange={onFilterContact}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  margin: 30px 0 20px;\n  text-align: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 22px;\n  color: #70135f;\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from 'components/PageStyled/ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FormContainer","styled","Form","Title","Label","Input","Field","ErrorValue","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","selectContactsActive","activeUpdate","selectFilteredContacts","toLowerCase","includes","schema","yup","shape","matches","required","number","min","initialValues","ContactForm","useSelector","dispatch","useDispatch","validationSchema","onSubmit","resetForm","contact","toLocaleLowerCase","alert","addContactThunk","autoComplete","htmlFor","type","placeholder","component","ItemLi","ItemSpan","Modal","UpdateForm","id","onClick","setActiveUpdate","isExist","updateContactThunk","e","stopPropagation","ContactListItem","active","deleteContactThunk","List","Text","ContactList","visibleContacts","loading","authenticated","selectUserAuthentication","useEffect","fetchContactsThunk","Loader","Filter","onChange","setFilter","target","trim"],"sourceRoot":""}