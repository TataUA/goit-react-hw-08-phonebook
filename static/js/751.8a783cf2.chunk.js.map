{"version":3,"file":"static/js/751.8a783cf2.chunk.js","mappings":"sLAEaA,E,QAAQC,EAAAA,GAAH,8N,6NCCLC,GAAgBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8HAObD,EAAQC,EAAAA,EAAAA,GAAH,+NAYLG,EAAQH,EAAAA,EAAAA,MAAH,oMAWLI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,mKAULM,EAAaN,EAAAA,EAAAA,IAAH,oGAOVO,EAASP,EAAAA,EAAAA,OAAH,uW,wJCtCbQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,IAAI,GACJC,QACC,iCACA,oEAEDC,WACHC,MAAON,EAAAA,KAAaM,QAAQD,WAC5BE,SAAUP,EAAAA,KAEPG,IAAI,GACJC,QACC,wIACA,6DAEDC,aAGCG,EAAgB,CACpBN,KAAM,GACNI,MAAO,GACPC,SAAU,IAGCE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBb,EAClBc,SATiB,SAAC,EAAD,GAA+C,IAA5CX,EAA2C,EAA3CA,KAAMI,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcO,EAAgB,EAAhBA,UACjDJ,GAASK,EAAAA,EAAAA,IAAkB,CAAEb,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAC1CO,GACD,EAGC,UAKE,UAAC,KAAD,CAAeE,aAAa,MAA5B,WACE,UAAC,KAAD,CAAOC,QAAQ,OAAf,UAAsB,QAEpB,SAAC,KAAD,CACEC,GAAG,OACHC,KAAK,OACLjB,KAAK,OACLkB,YAAY,mBAEd,SAAC,KAAD,CAAclB,KAAK,OAAOmB,UAAWxB,EAAAA,SAEvC,UAAC,KAAD,CAAOoB,QAAQ,QAAf,UAAuB,SAErB,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLjB,KAAK,QACLkB,YAAY,4BAEd,SAAC,KAAD,CAAclB,KAAK,QAAQmB,UAAWxB,EAAAA,SAExC,UAAC,KAAD,CAAOoB,QAAQ,WAAf,UAA0B,YAExB,SAAC,KAAD,CACED,aAAa,MACbE,GAAG,WACHC,KAAK,WACLjB,KAAK,WACLkB,YAAY,oCAGd,SAAC,KAAD,CAAclB,KAAK,WAAWmB,UAAWxB,EAAAA,SAE3C,SAAC,KAAD,CAAQsB,KAAK,SAAb,SAAsB,eAI7B,E,UCtED,EAbqB,WAGnB,OAFsBG,EAAAA,EAAAA,IAAYC,EAAAA,KAER,SAAC,KAAD,CAAUC,GAAI,eAGtC,iCACE,SAAC,IAAD,UAAO,yBACP,SAACf,EAAD,MAGL,C","sources":["components/PageStyled/RegicterPage.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin: 30px 0;\n  text-align: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 32px;\n  color: #70135f;\n  @media screen and (min-width: 768px) {\n    font-size: 38px;\n  }\n`;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #edc3ca;\n  border: 1px solid #48494a;\n`;\n\nexport const Title = styled.h3`\n  margin: 10px 0;\n  text-align: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 20px;\n  color: #70135f;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 400;\n  color: #120d14;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 20px;\n  margin-top: 4px;\n  display: block;\n  padding: 4px;\n  border: 1px solid #48494a;\n  font-size: 16px;\n`;\n\nexport const ErrorValue = styled.div`\n  margin-top: 4px;\n  font-size: 12px;\n  font-weight: 400;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 8px;\n  border: 1px solid #120d14;\n  border-radius: 8px;\n  background-color: #120d14;\n  font-size: 16px;\n  color: #edc3ca;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { registerUserThunk } from 'redux/auth/authThunk';\nimport {\n  FormContainer,\n  Label,\n  Input,\n  ErrorValue,\n  Button,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2)\n    .matches(\n      /^[a-zA-Z][a-zA-Z0-9-_.]{1,20}$/,\n      'The name can only contain letters, numbers, underscores and dash'\n    )\n    .required(),\n  email: yup.string().email().required(),\n  password: yup\n    .string()\n    .min(7)\n    .matches(\n      /(?=[#$-/:-?{-~!\"^_`[\\]a-zA-Z]*([0-9#$-/:-?{-~!\"^_`[\\]]))(?=[#$-/:-?{-~!\"^_`[\\]a-zA-Z0-9]*[a-zA-Z])[#$-/:-?{-~!\"^_`[\\]a-zA-Z0-9]{7,20}/,\n      'Password can only contain letters, numbers and characters'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(registerUserThunk({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormContainer autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Rosie Simpson\"\n          />\n          <ErrorMessage name=\"name\" component={ErrorValue} />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"rosiesimpson@gmail.com\"\n          />\n          <ErrorMessage name=\"email\" component={ErrorValue} />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            autoComplete=\"off\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"\n            Must be at least 7 characters\"\n          />\n          <ErrorMessage name=\"password\" component={ErrorValue} />\n        </Label>\n        <Button type=\"submit\">Create</Button>\n      </FormContainer>\n    </Formik>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectUserAuthentication } from 'redux/auth/authSelectors';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Title } from 'components/PageStyled/RegicterPage.styled';\n\nconst RegisterPage = () => {\n  const authenticated = useSelector(selectUserAuthentication);\n\n  if (authenticated) return <Navigate to={'/contacts'} />;\n\n  return (\n    <>\n      <Title>Create your account</Title>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Title","styled","FormContainer","Form","Label","Input","Field","ErrorValue","Button","schema","yup","shape","name","min","matches","required","email","password","initialValues","RegisterForm","dispatch","useDispatch","validationSchema","onSubmit","resetForm","registerUserThunk","autoComplete","htmlFor","id","type","placeholder","component","useSelector","selectUserAuthentication","to"],"sourceRoot":""}